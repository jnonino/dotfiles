{{ if (or (eq .chezmoi.os "darwin") (eq .chezmoi.os "linux")) -}}
#!/usr/bin/env bash

set -eEuo pipefail

{{ if eq .chezmoi.os "linux" }}
  sudo apt-get update
  sudo apt-get upgrade
  sudo apt-get install -y build-essential procps curl file git
{{ end }}

#####################################
# Install brew if it is not installed
#####################################
if ! command -v brew &> /dev/null
then
  echo "brew is not installed"
  bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

{{ if eq .chezmoi.os "linux" }}
  test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
  test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{ end }}

export HOMEBREW_PREFIX=$(brew --prefix)
eval "$($HOMEBREW_PREFIX/bin/brew shellenv)"

{{ if eq .chezmoi.os "linux" }}
  brew install gcc
{{ end }}

###################
# Brew dependencies
#   Install packages
#   Brewfile hash: {{ include ".files/Brewfile" | sha256sum }}
###################
brew update
brew bundle --verbose --debug --file {{ joinPath .chezmoi.sourceDir ".files/Brewfile" | quote }}
brew upgrade
brew autoremove
brew cleanup

#######################################
# Install oh-my-zsh - https://ohmyz.sh/
#######################################
if [ -d {{ joinPath .chezmoi.homeDir ".oh-my-zsh" }} ]; then
  echo "oh-my-zsh is installed"
else
  echo "oh-my-zsh is not installed"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

#########################
# Node Version Management
#########################
mkdir -p {{ joinPath .chezmoi.homeDir ".nvm" }}

#########################
# Ruby Version Management
#########################
mkdir -p {{ joinPath .chezmoi.homeDir ".rbenv" }}

########################
# WSL Specific Functions
########################
{{ if (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) }}
{{ end }}

{{ end }}
